package ${package}.${moduleName}.controller;

import java.util.Arrays;
import java.util.List;
import java.util.Map;

import io.renren.utils.R;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;




/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@RequestMapping("${moduleName}/${pathName}")
public class ${className}Controller {
    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 列表
     */
    @RequestMapping("/list")
    public R list(@RequestParam Map<String, Object> params){
        List<${className}Entity> list = ${classname}Service.selectList(params);

        return R.ok().put("list", list);
    }


    /**
     * 信息
     */
    @RequestMapping("/info/{${pk.attrname}}")
    public R info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
		${className}Entity ${classname} = ${classname}Service.get${className}ByPrimaryKey(${pk.attrname});

        return R.ok().put("${classname}", ${classname});
    }

    /**
     * 保存
     */
    @RequestMapping("/save")
    public R save(@RequestBody ${className}Entity ${classname}){
		int flag = ${classname}Service.save(${classname});
        if (flag > 0) {
            return R.ok();

        }else {
            return R.error();
        }
    }

    /**
     * 修改
     */
    @RequestMapping("/update")
    public R update(@RequestBody ${className}Entity ${classname}){
		int flag = ${classname}Service.update(${classname});
        if (flag > 0) {
            return R.ok();

        }else {
            return R.error();
        }
    }

    /**
     * 删除
     */
    @RequestMapping("/delete/{${pk.attrname}}")
    public R delete(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
		int flag = ${classname}Service.deleteByPrimaryKey(${pk.attrname});
        if (flag > 0) {
            return R.ok();

        }else {
            return R.error();
        }
    }

    /**
     * 批量删除
     */
    @RequestMapping("/delete/{${pk.attrname}s}")
    public R batchDelete(@PathVariable("${pk.attrname}s") String ${pk.attrname}s) {
        int flag = ${classname}Service.batchDelete(${pk.attrname}s);
        if (flag > 0) {
            return R.ok();

        }else {
            return R.error();
        }
    }

}
